openapi: 3.0.3
info:
  version: '3.0'
  title: Admin APIs
  contact:
    name: Integrations
    email: support@fylehq.com
servers:
  - url: 'https://platform.fylehq.com/v1'
    description: Live Server
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.fylehq.com/app/developers/#/oauth/authorize'
          tokenUrl: 'https://accounts.fylehq.com/oauth/token'
          scopes:
            admin.*: Grant all ADMIN actions
  parameters:
    created_at:
      in: query
      name: created_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ format along with operator in
        RHS dot pattern.<br>

        Supported operators are `gte`,`lte`,`gt`,`lt`.<br>

        created_at=gte.2020-06-01T00:00:00.000Z filters all objects created on
        or after 1st Jun 2020.<br>

        created_at=gte.2020-06-01T00:00:00.000Z&created_at=lt.2020-07-01T00:00:00.000Z
        filters all objects `created` in the month of Jun 2020.<br>
      schema:
        type: string
        example: >-
          created_at=gte.2020-06-01T00:00:00.000Z&created_at=lt.2020-07-01T00:00:00.000Z
    updated_at:
      in: query
      name: updated_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ format along with operator in
        RHS dot pattern.<br>

        Supported operators are `gte`,`lte`,`gt`,`lt`.<br>

        updated_at=gte.2020-06-01T00:00:00.000Z filters all objects updated on
        or after 1st Jun 2020.<br>

        updated_at=gte.2020-06-01T00:00:00.000Z&updated_at=lt.2020-07-01T00:00:00.000Z
        filters all objects `updated` in the month of Jun 2020.<br>
      schema:
        type: string
        example: >-
          updated_at=gte.2020-06-01T00:00:00.000Z&updated_at=lt.2020-07-01T00:00:00.000Z
    offset:
      in: query
      name: offset
      description: |
        offset is used to skip that many number of objects before counting. <br>
      schema:
        type: integer
        example: 10
    limit:
      in: query
      name: limit
      description: >
        A limit on the number of objects to be returned. Allowed values are from
        1 to 200.
      schema:
        type: integer
        example: 20
        default: 50
        maximum: 200
    employee_email:
      in: query
      name: employee.email
      description: |
        This param is used to filer records based employee email.
        Supported operators are `in`,`eq`.<br>
      schema:
        type: string
        example: eq.employee1@example.com
    approved_at:
      in: query
      name: approved_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ format along with operator in
        RHS dot pattern.<br>

        Supported operators are `gte`,`lte`,`gt`,`lt`.<br>

        approved_at=gte.2020-06-01T00:00:00.000Z filters all objects approved on
        or after 1st Jun 2020.<br>

        approved_at=gte.2020-06-01T00:00:00.000Z&approved_at=lt.2020-07-01T00:00:00.000Z
        filters all objects `approved` in the month of Jun 2020.<br>
      schema:
        type: string
        example: >-
          approved_at=gte.2020-06-01T00:00:00.000Z&approved_at=lt.2020-07-01T00:00:00.000Z
    state:
      in: query
      name: state
      description: >
        Accepted states are DRAFT, COMPLETE, APPROVER_PENDING, APPROVED,
        PAYMENT_PENDING, PAYMENT_PROCESSING, PAID.<br>

        Supported operators are `eq`, `like`, `in`.<br>
      schema:
        type: string
        example: in.(COMPLETE)
    verified:
      in: query
      name: verified
      schema:
        type: string
        example: eq.true
      description: >
        verified is used to filter expenses by verified flag.

        For example, if verified is true, it will return all the verified
        expenses. If verififed is false, it will return all the unverified
        expenses. leaving it blank will return all the expenses.
    name:
      in: query
      name: name
      description: |
        Supported operators are `eq`, `like`, `in`.<br>
        name=in.(value1,value2)
      schema:
        type: string
        example: like.Add*
    only_enabled:
      in: query
      name: only_enabled
      description: |
        This param is used to filer records by
        Supported operators are `eq`.<br>
      schema:
        type: string
        example: eq.true
    reports_state:
      in: query
      name: state
      description: >
        Accepted states are DRAFT, APPROVER_INQUIRY, APPROVER_PENDING, APPROVED,
        PAYMENT_PENDING, PAYMENT_PROCESSING, PAID.<br>

        Supported operators are `eq`, `like`, `in`.<br>
      schema:
        type: string
        example: in.(COMPLETE)
    settled_at:
      in: query
      name: settled_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ format along with operator in
        RHS dot pattern.<br>

        Supported operators are `gte`,`lte`,`gt`,`lt`.<br>

        settled_at=gte.2020-06-01T00:00:00.000Z filters all reports settled on
        or after 1st Jun 2020.<br>

        settled_at=gte.2020-06-01T00:00:00.000Z&settled_at=lt.2020-07-01T00:00:00.000Z
        filters all reports settled in the month of Jun 2020.<br>
      schema:
        type: string
        example: >-
          settled_at=gte.2020-06-01T00:00:00.000Z&settled_at=lt.2020-07-01T00:00:00.000Z
    reimbursed_at:
      in: query
      name: reimbursed_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ format along with operator in
        RHS dot pattern.<br>

        Supported operators are `gte`,`lte`,`gt`,`lt`.<br>

        reimbursed_at=gte.2020-06-01T00:00:00.000Z filters all reports
        reimbursed on or after 1st Jun 2020.<br>

        reimbursed_at=gte.2020-06-01T00:00:00.000Z&reimbursed_at=lt.2020-07-01T00:00:00.000Z
        filters all reports reimbursed in the month of Jun 2020.<br>
      schema:
        type: string
        example: >-
          reimbursed_at=gte.2020-06-01T00:00:00.000Z&reimbursed_at=lt.2020-07-01T00:00:00.000Z
    advance_requests_settled_at:
      in: query
      name: advance->settled_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ format along with operator in
        RHS dot pattern.<br>

        Supported operators are `gte`,`lte`,`gt`,`lt`.<br>

        advance->settled_at=gte.2020-06-01T00:00:00.000Z filters all advance
        requests settled on or after 1st Jun 2020.<br>

        advance->settled_at=gte.2020-06-01T00:00:00.000Z&advance->settled_at=lt.2020-07-01T00:00:00.000Z
        filters all advance requests settled in the month of Jun 2020.<br>
      schema:
        type: string
        example: >-
          advance->settled_at=gte.2020-06-01T00:00:00.000Z&advance->settled_at=lt.2020-07-01T00:00:00.000Z
    advance_requests_state:
      in: query
      name: state
      description: >
        Accepted states are DRAFT, APPROVAL_PENDING, APPROVED, REJECTED,
        PAID.<br>

        Supported operators are `eq`, `like`, `in`.<br>
      schema:
        type: string
        example: in.(APPROVED)
    advances_settled_at:
      in: query
      name: settled_at
      description: >
        Date string in yyyy-MM-ddTHH:mm:ss.SSSZ format along with operator in
        RHS dot pattern.<br>

        Supported operators are `gte`,`lte`,`gt`,`lt`.<br>

        settled_at=gte.2020-06-01T00:00:00.000Z filters all advances settled on
        or after 1st Jun 2020.<br>

        settled_at=gte.2020-06-01T00:00:00.000Z&settled_at=lt.2020-07-01T00:00:00.000Z
        filters all advances settled in the month of Jun 2020.<br>
      schema:
        type: string
        example: >-
          settled_at=gte.2020-06-01T00:00:00.000Z&settled_at=lt.2020-07-01T00:00:00.000Z
    display_name:
      in: query
      name: display_name
      description: |
        Supported operators are `eq`, `like`, `in`.<br>
        display_name=in.(value1,value2)
      schema:
        type: string
        example: like.Fast*
  schemas:
    '401':
      type: object
      properties:
        message:
          enum:
            - invalid token
          type: string
          description: >
            This error means that the input access token is either not issued by
            Fyle or has expired.

            You need to generate a new access token.
    '403':
      type: object
      properties:
        message:
          enum:
            - Forbidden
          type: string
          description: >
            This error means current user does not have enough permissions to
            perform this operation.
    count:
      description: |
        The total number of objects that can be requested.
      type: integer
      example: 10000
    offset:
      description: >
        offset is used to skip that many number of objects before counting. <br>

        For example, if there are 2000 objects, <br>

        The first request will have offset as 0 and limit as 1000 to return
        first 1000 objects. <br>

        The second request will have offset as 1000 and limit as 1000 to return
        next 1000 objects. <br>
      type: integer
      example: 10
      default: 200
    level:
      type: object
      readOnly: true
      properties:
        id:
          type: string
          description: |
            Unique identifier to a level object.
          example: lvlwgon23lee
        name:
          type: string
          description: |
            Level name of the employees
          example: Associate I
        band:
          type: string
          description: >
            Band in which this level belongs to, you can group mulitple levels
            into a single band.
          example: Associate
        rank:
          type: integer
          description: >
            Rank in which this level belongs to. We recommend to assign higher
            rank for senior people in the org trees and

            lower rank for employees in leaf of org tree.
          example: 1
    department:
      type: object
      readOnly: true
      properties:
        id:
          type: string
          description: Unique identifier to a department object.
          example: deptselnkgwr
        name:
          type: string
          example: Sales
        subDepartment:
          type: string
          example: Outbound Sales
    user:
      type: object
      readOnly: true
      properties:
        id:
          type: string
          maxLength: 255
          description: |
            This id helps to identify employees in other organisations.
            This id is always prefixed with the string `us`.
            This id is unique per email.
          readOnly: true
          example: usIYTLwzlaGu
        email:
          type: string
          format: email
          maxLength: 127
          description: >
            An immutable field that represents the email address of the
            Employee.

            Must be compliant with <a
            href='https://www.ietf.org/rfc/rfc822.txt'>RFC 822.</a>
          example: john.doe@example.com
        full_name:
          type: string
          maxLength: 255
          description: >
            Represents the full name of the Employee. Must be at least 3
            characters.
          example: John Doe
    cost_center:
      type: object
      readOnly: true
      properties:
        id:
          type: string
          example: '11539'
        name:
          type: string
          maxLength: 255
          example: sales & marketing
        code:
          type: string
          example: sm-cc
    perdiem:
      type: object
      readOnly: true
      properties:
        id:
          type: string
          example: '1104'
        name:
          type: string
          maxLength: 255
          example: sales & marketing
        currency:
          type: string
          maxLength: 3
          example: USD
        rate:
          type: integer
          example: 40
    project:
      type: object
      properties:
        id:
          type: string
          maxLength: 10
          description: >
            This id provided by Fyle to identify a project from this
            organisation.

            This id is unique within the organisation.
          readOnly: true
          example: '2391'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the project.
          example: Fast and Furious
        sub_project:
          type: string
          maxLength: 255
          description: Represents the name of the sub_project.
          example: Formula One
        display_name:
          type: string
          maxLength: 513
          description: >
            This is a combination of name and sub_project separated by a / and
            spaces.

            In case if no sub_project is present it is same as name of the
            project.
          example: Fast and Furious / Formula One
        code:
          type: string
          maxLength: 255
          description: |
            This represents the code of project.
          example: FF-032
    location:
      type: object
      properties:
        city:
          type: string
          example: London
        state:
          type: string
          example: London
        display_name:
          type: string
        country:
          type: string
          example: United Kingdom
        formatted_address:
          type: string
          example: '221 Baker St, Marylebone, London, United Kingdom'
        latitude:
          type: number
          example: 12.971599
        longitude:
          type: number
          example: 77.594566
    custom_property:
      type: object
      description: |
        custom properties
      properties:
        name:
          type: string
        value:
          type: string
          oneOf:
            - type: string
            - type: boolean
            - type: integer
            - $ref: '#/components/schemas/location'
            - type: array
              items:
                type: string
      example:
        house: gryffindor
    dwolla_cutomers_metadata:
      type: object
      readOnly: true
      properties:
        customer_metadata_id:
          type: string
          readOnly: true
        customer_id:
          type: string
          readOnly: true
        bank_account_added:
          type: boolean
          readOnly: true
          description: |
            Flag which indicates whether bank account was added or not.
          default: false
          example: true
    annual_mileage:
      type: object
      properties:
        two_wheeler:
          type: number
          example: 0
        four_wheeler:
          type: number
          example: 0
        four_wheeler1:
          type: number
          example: 0
        four_wheeler3:
          type: number
          example: 0
        four_wheeler4:
          type: number
          example: 0
        bicycle:
          type: number
          example: 0
        electric_car:
          type: number
          example: 0
    employee_id:
      type: string
      maxLength: 255
      description: >
        This is an id prodvided by Fyle to uniquely identify an employee within
        an organization.

        This id is always prefixed with `ou`.
      readOnly: true
      example: outGt9ju6qP
    email:
      type: string
      format: email
      maxLength: 127
      example: john.doe@example.com
      description: >
        An immutable field that represents the email address.

        Must be compliant with <a href="https://www.ietf.org/rfc/rfc822.txt">RFC
        822.</a>
    employee:
      type: object
      description: Details of the employee to whom this object belongs to.
      readOnly: true
      properties:
        id:
          $ref: '#/components/schemas/employee_id'
        user_id:
          type: string
          maxLength: 255
          description: |
            This id helps to identify employees in other organisations.
            It is always prefixed with the string `us`.
            It is unique per email.
          example: usIYTLwzlaGu
        email:
          $ref: '#/components/schemas/email'
        code:
          type: string
          maxLength: 255
          example: E84122
          description: >
            This field refers to any string that the client programs can use to
            refer to an employee's unique id.

            This could be any field such as an UUID from an Active Directory
            server or employee id in a HRMS system.
        location:
          type: string
          maxLength: 255
          example: Bangalore Ofc
        level_id:
          type: string
          maxLength: 255
          example: lvlnvJUe9k6Vx
        department_id:
          type: string
          maxLength: 255
          example: dept9in4oIHpdR
        business_unit:
          type: string
          maxLength: 255
          example: Finance ops
          description: >-
            Represents the business unit of the organization to which of the
            employee belongs.
        title:
          type: string
          maxLength: 255
          example: Branch Manager
          description: Represents the title/desgination of the employee.
        mobile:
          type: string
          description: >
            Mobile number of the employee.

            `Given example is a fake number. We don't know who might answer your
            call.`
          example: +1-202-555-0167
        joined_at:
          type: string
          format: date
          example: '2018-10-31'
          description: Date string in YYYY-MM-DD format
        full_name:
          type: string
          maxLength: 255
          example: John Doe
          description: >-
            Represents the full name of the employee. Must be at least 3
            characters.
    objects_employee:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
          description: >
            This id prodvided by Fyle to identify an employee from this
            organisation.

            This id is always prefixed with `ou`.

            This id is unique per organisation per email.
          readOnly: true
          example: ouHXboARkbAB
        user_id:
          type: string
          maxLength: 255
          description: |
            This id helps to identify employees in other organisations.
            This id is always prefixed with the string `us`.
            This id is unique per email.
          readOnly: true
          example: usIYTLwzlaGu
        email:
          type: string
          format: email
          maxLength: 127
          readOnly: true
          example: john.doe@example.com
          description: >
            An immutable field that represents the email address of the
            employee.

            Must be compliant with <a
            href='https://www.ietf.org/rfc/rfc822.txt'>RFC 822.</a>
        code:
          type: string
          maxLength: 255
          example: E84122
          description: >
            This field refers to any string that the client programs can use to
            refer to an employee's unique id.

            This could be any field such as an UUID from an Active Directory
            server or employee id in a HRMS system.
        full_name:
          type: string
          maxLength: 255
          example: John Doe
          description: >-
            Represents the full name of the employee. Must be at least 3
            characters.
        created_at:
          type: string
          format: date-time
          description: >
            <a href='https://tools.ietf.org/html/rfc3339#section-5.6'>RFC 3339,
            section 5.6 compliant timestamp.</a>

            Shows when this employees entry was created.
          readOnly: true
          example: '2020-06-01T13:14:54.804Z'
        updated_at:
          type: string
          format: date-time
          description: >
            <a href='https://tools.ietf.org/html/rfc3339#section-5.6'>RFC 3339,
            section 5.6 compliant timestamp.</a>

            Shows when this employees entry was updated.
          readOnly: true
          example: '2020-06-11T13:14:55.201598Z'
        email_verified_at:
          type: string
          format: date-time
          description: >
            <a href='https://tools.ietf.org/html/rfc3339#section-5.6'>RFC 3339,
            section 5.6 compliant timestamp.</a>

            Shows when this email was verified in Fyle.
          readOnly: true
          example: '2020-06-01T16:19:00.000Z'
        is_onboarded:
          type: boolean
          description: >
            This flag indicates whether an employee has completed the onboarding
            or not.
          example: true
        joined_at:
          type: string
          format: date
          example: '2018-10-31'
          description: Date string in YYYY-MM-DD format
        location:
          type: string
          maxLength: 255
          example: Bangalore Ofc
        level_id:
          type: string
          maxLength: 255
          example: lvlnvJUe9k6Vx
        level:
          $ref: '#/components/schemas/level'
        business_unit:
          type: string
          maxLength: 255
          example: Finance ops
        department_id:
          type: string
          maxLength: 255
          example: dept9in4oIHpdR
        department:
          $ref: '#/components/schemas/department'
        title:
          type: string
          maxLength: 255
          example: Branch Manager
        mobile:
          type: string
          description: >
            Mobile number of the employee.

            `Given example is a fake number. We don't know who might answer your
            call.`
          example: +1-202-555-0167
        is_mobile_verified:
          type: boolean
          description: ''
          default: false
          example: false
        mobile_verified_at:
          type: string
          format: date-time
          description: >
            <a href='https://tools.ietf.org/html/rfc3339#section-5.6'>RFC 3339,
            section 5.6 compliant timestamp.</a>

            Shows when the employee has verified his/her mobile number in Fyle.
          readOnly: true
          example: '2020-06-01T16:19:00.000Z'
        roles:
          type: array
          readOnly: true
          description: >
            These are roles assigned to an employee, Most roles are assigned by
            Admin.

            Few roles like HOP, HOD, APPROVER are assigned by FYLE.
          items:
            type: string
            enum:
              - FYLER
              - APPROVER
              - TRAVEL_ADMIN
              - VERIFIER
              - PAYMENT_PROCESSOR
              - FINANCE
              - ADMIN
              - TRAVEL_AGENT
              - OWNER
              - AUDITOR
              - HOD
              - HOP
          example:
            - FYLER
            - APPROVER
        branch_ifsc:
          type: string
          maxLength: 11
          description: >
            IFSC code of the bank account of the employee.

            Must be a 11 digit alphanumeric code. `branch_ifsc` is India
            specific.
          example: SBIN0116569
        bank_name:
          type: string
          readOnly: true
          example: Example bank
        branch_account:
          type: string
          maxLength: 63
          description: >
            The account number of the bank account of the employee.
            `branch_account` is India specific.
          example: XWWEW000024324493
        org_id:
          type: string
          description: |
            The unique id of the Organization to which the employee belongs.
          readOnly: true
          example: orwruogwnngg
        primary_approver_id:
          type: string
          maxLength: 255
          description: |
            Employee Id of the primary approver.
          example: ou4b24ugv3vg
        primary_approver:
          allOf:
            - $ref: '#/components/schemas/user'
          description: >
            Primary approver who will be added as an approver by default for all
            the submitted reports and expenses.
          example:
            full_name: primary approver
            email: primary_approver@example.com
        secondary_approver_id:
          type: string
          maxLength: 255
          description: |
            Employee Id of the secondary approver.
          example: ourjgeugv3vg
        secondary_approver:
          allOf:
            - $ref: '#/components/schemas/user'
          description: |
            A secondary approver who can be added to reports via policies.
          example:
            full_name: secondary approver
            email: secondary_approver@example.com
        tertiary_approver_id:
          type: string
          maxLength: 255
          description: |
            Employee Id of the tertiary approver.
          example: oueuroefkver
        tertiary_approver:
          allOf:
            - $ref: '#/components/schemas/user'
          description: |
            A tertiary approver who can be added to reports via policies.
          example:
            full_name: tertiary approver
            email: tertiary_approver@example.com
        delegatee_id:
          type: string
          maxLength: 255
          description: |
            Employee Id of the delegatee.
          example: ouvebjeasfj
        delegatee:
          allOf:
            - $ref: '#/components/schemas/user'
          description: |
            An employee who will be able to login on-behalf-of this employee.
          example:
            full_name: delegatee
            email: delegatee@example.com
        delegation_start_at:
          type: string
          format: date-time
          description: >
            <a href='https://tools.ietf.org/html/rfc3339#section-5.6'>RFC 3339,
            section 5.6 compliant timestamp.</a>

            Shows when the employee was verified his/her mobile number in Fyle.
          example: '2020-06-01T16:19:00.000Z'
        delegation_end_at:
          type: string
          format: date-time
          description: >
            <a href='https://tools.ietf.org/html/rfc3339#section-5.6'>RFC 3339,
            section 5.6 compliant timestamp.</a>

            Show when the employee has verified his/her mobile number in Fyle.
          example: '2020-06-01T16:19:00.000Z'
        mileage_rate_labels:
          type: array
          description: |
            The list of mileage labels that are applicable for this employee.
          items:
            type: string
            enum:
              - TWO_WHEELER
              - FOUR_WHEELER
              - FOUR_WHEELER1
              - FOUR_WHEELER3
              - FOUR_WHEELER4
              - BICYCLE
              - ELECTRIC_CAR
          example:
            - TWO_WHEELER
            - FOUR_WHEELER
        cost_center_ids:
          type: array
          description: |
            This list of cost center ids that are available for this employee.
          items:
            type: string
          example:
            - '11539'
        cost_centers:
          type: array
          description: |
            This list of cost centers that are available for this employee.
          items:
            $ref: '#/components/schemas/cost_center'
        per_diem_rate_ids:
          type: array
          description: |
            This list of per diem rate ids that are available for this employee.
          items:
            type: string
          example:
            - '1104'
        per_diem_rates:
          type: array
          description: This list of per diem rates that are available for this employee.
          items:
            $ref: '#/components/schemas/perdiem'
        project_ids:
          type: array
          description: |
            This list of project ids that are available for this employee.
          items:
            type: string
          example:
            - '2391'
        projects:
          type: array
          description: |
            This list of projects that are available for this employee.
          items:
            $ref: '#/components/schemas/project'
        custom_properties:
          type: array
          items:
            $ref: '#/components/schemas/custom_property'
        status:
          type: string
          enum:
            - PENDING_DETAILS
            - ACTIVE
            - DISABLED
          example: ACTIVE
        is_enabled:
          type: boolean
          description: >
            Indicates whether an employee is enabled or not in Fyle.

            During POST call, If set to `FALSE`, an active employee account will
            be disabled.

            Setting to `TRUE` will NOT enable a employee.

            This can only be accomplished from the web-app.
          default: false
        special_email:
          type: string
          format: email
          description: >
            This is an auto-generated email to which an employee can forward a
            receipt from any of their email inboxes.

            A corresponding expense will be created in their Fyle app.
          example: receipts+john_doe_ejtj@fyle.ai
        dwolla_customers_metadata:
          $ref: '#/components/schemas/dwolla_cutomers_metadata'
        annual_mileage_of_user_before_joining_fyle:
          $ref: '#/components/schemas/annual_mileage'
        is_primary:
          type: boolean
          description: >
            This flag indicates whether this is primary account of this employee
            or not.
          readOnly: true
          example: true
        last_updater_id:
          type: string
          description: |
            This represents the id of employee who updated this employee.
          example: ouGgsdfdq
        last_updater:
          allOf:
            - $ref: '#/components/schemas/employee'
          description: |
            Details of employee who updated this employee.
    employees:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/count'
        offset:
          $ref: '#/components/schemas/offset'
        url:
          type: string
          example: /admin/employees
        data:
          type: array
          items:
            $ref: '#/components/schemas/objects_employee'
    json_parsing_error:
      type: object
      properties:
        message:
          enum:
            - Unable to process JSON
          type: string
          description: |
            This error means that incoming json is not in right format.
    foreign_currency:
      type: string
      description: >
        The three-letter currency code following ISO standard <a
        href='https://www.iso.org/iso-4217-currency-codes.html'>ISO 4217</a>.

        Original currency signifies the currency in which the object
        (expense/advance/refund/etc.) was originally created.
      example: INR
    foreign_amount:
      type: number
      description: >
        Amount value of the object, in original currency i.e the currency in
        which the object was initially created.
      example: 40292.23
    creator_id:
      type: string
      maxLength: 255
      description: >
        An unique ID, generated by Fyle, for identifying the Employee who
        created the object. Once an object is created, the value of this field
        cannot be changed and is immutable.<br>
      example: ou12345Zdfx
      readOnly: true
    category:
      type: object
      properties:
        id:
          type: string
          maxLength: 10
          example: '16570'
          description: >
            This id provided by Fyle to identify a category from this
            organisation.

            This id is unique within the organisation.
        name:
          type: string
          maxLength: 255
          example: Engine
          description: Represents the name of the category.
        sub_category:
          type: string
          maxLength: 255
          example: Turbo charged
          description: Represents the name of the sub_category.
        display_name:
          type: string
          maxLength: 255
          example: Engine / Turbo charged
          description: >
            This is a combination of name and sub_category separated by a / and
            spaces.

            In case if no sub_category is present it is same as name of the
            category.
        system_category:
          type: string
          maxLength: 255
          example: Others
          description: Represents the name of the system_category.
    source_account:
      type: object
      properties:
        id:
          type: string
          example: acct0vTfdNQrT
        type:
          type: string
          enum:
            - PERSONAL_ACCOUNT
            - PERSONAL_ADVANCE_ACCOUNT
            - PERSONAL_CORPORATE_CREDIT_CARD_ACCOUNT
            - COMPANY_EXPENSE_ACCOUNT
            - COMPANY_ADVANCE_ACCOUNT
            - COMPANY_CORPORATE_CREDIT_CARD_ACCOUNT
            - COMPANY_CATEGORY_ACCOUNT
          example: PERSONAL_ACCOUNT
    created_at:
      type: string
      format: date-time
      description: >
        <a href='https://tools.ietf.org/html/rfc3339#section-5.6'>RFC 3339,
        section 5.6 compliant timestamp.</a>

        Signifies when this object was created.
      readOnly: true
      example: '2020-06-01T13:14:54.804Z'
    updated_at:
      type: string
      format: date-time
      description: >
        <a href='https://tools.ietf.org/html/rfc3339#section-5.6'>RFC 3339,
        section 5.6 compliant timestamp.</a>

        Signifies when this object was updated.
      readOnly: true
      example: '2020-06-11T13:14:55.201598Z'
    report:
      type: object
      readOnly: true
      properties:
        id:
          type: string
          maxLength: 255
          description: |
            This id prodvided by Fyle to uniquely identify a Expense report.
            This id is always prefixed with `rp`.
          readOnly: true
          example: rpevetgn3kl
        purpose:
          type: string
        approved_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the Report was approved.

            This field could be null if the Report was not yet approved.
          example: '2020-07-23T09:32:00.933Z'
        reimbursed_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the Expense was Reimbursed.

            If the Expense is not reimbursed yet, this could be null. <br>
          example: '2020-07-28T09:32:00.933Z'
        claim_number:
          type: string
          maxLength: 255
        settlement_id:
          type: string
          maxLength: 255
          description: >
            An unique ID, generated by Fyle, for identifying the Settlement.

            Once a Report is paid, the value of this field cannot be changed and
            is immutable. <br>
          example: setzS7mbPKPWg
        settled_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the report was settled. <br>
          example: '2020-07-23T09:32:00.933Z'
        trip_request_id:
          type: string
          description: An ID of the TripRequest associated with it
    mileage:
      type: object
      properties:
        distance:
          type: number
          description: Actual distance travelled by employee in mileage expenses.
        calculated_distance:
          type: number
          description: Distance compluted by Fyle in mileage expenses.
        distance_unit:
          type: string
          enum:
            - KM
            - MILES
        calculated_amount:
          type: number
          description: Amount compluted by Fyle in mileage expenses.
        vehicle_type:
          type: string
          description: Type of vehicle used for travel.
        rate:
          type: number
          description: Rate per km as provided in the Fyle system
        is_round_trip:
          type: boolean
          description: Flag stating whether this was a round trip or not.
    travel:
      type: object
      properties:
        bus_travel_class:
          description: |
            This field is applicable only for bus category.
          type: string
          example: AC
        train_travel_class:
          description: |
            This field is applicable for only Train category.
          type: string
          example: string
        flight_journey_travel_class:
          description: >
            This field is applicable only for flight category. Can be
            `BUSINESS`, `ECONOMY`, `FIRST_CLASS`
          type: string
          example: ECONOMY
        flight_return_travel_class:
          description: >
            This field is applicable only for flight category. Can be
            `BUSINESS`, `ECONOMY`, `FIRST_CLASS`
          type: string
          example: BUSINESS
    file:
      type: object
      readOnly: true
      properties:
        id:
          type: string
          description: |
            Id of the file object. Always starts with `fi`.
          example: figo4lgkn2224
        name:
          type: string
          description: |
            Name of the uploaded file.
          example: uber_expenses_vmrpw.pdf
        type:
          type: string
          enum:
            - THUMBNAILx200x200
            - ORIGINAL
            - ENCRYPTED
          description: >
            Indicates whether this file original size or encrypted or its
            thumbnail image.
          example: ORIGINAL
        password:
          type: string
          description: |
            Password which required to unlock the file.
          example: SuperSecretPassword
        download_path:
          type: string
          description: |
            Link to download this file.
            change this to right url later.
          example: /api/files/fiGxWO1vdkW8/download
    approvals:
      type: object
      description: |
        siginifies all the approvals of a particular object.
      properties:
        approver_id:
          type: string
        state:
          type: string
          enum:
            - APPROVED
            - APPROVAL_PENDING
            - APPROVAL_DISABLED
      example:
        approver_id: oueoblnegf
        state: APPROVED
    org_id:
      type: string
      description: |
        The unique id of the Organization to which the object is associated.
      example: orwruogwnngg
    expense:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
          example: txg3053jg33
          description: >-
            An unique string to identify the Expense. Ignore this field when
            used as part of a POST request to create an Expense.
          readOnly: true
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          $ref: '#/components/schemas/employee'
        spent_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the transaction for which the expense [being]
            fyled was made. <br>

            This date cannot be in future.
          example: '2020-07-21T17:32:28Z'
        source:
          type: string
          example: SLACK_APP
          description: >
            The name of the client app which is creating the expense.

            if its a thrid party app, it prefixed with TPA_.

            Ex - If you pass SLACK_APP, it will be saved as TPA_SLACK_APP. If
            not passed, source is saved as TPA.
        currency:
          type: string
          maxLength: 3
          example: USD
          description: >
            ISO 4217 currency codes that are usually of three upper case
            letters.

            See "https://www.iban.com/currency-codes" for examples.

            If this field is ignored during a POST call to create/update an
            Expense, the default currency of the organization will be used.

            To use other currency than default currency use `foreign_currency`
            field.
        amount:
          type: number
          description: >
            The transaction amount for which the expense was/will-be fyled.

            The amount will be in the currency that the organization is setup
            with in case of GET requests. <br>

            Note that, when used as part of creating an Expense via POST, the
            actual amount in the Expense, in a subsequent GET call, may get
            changed either because of policies or admin/approvers changing the
            amount.
          example: 1500
        user_amount:
          type: number
          description: >
            The transaction amount as claimed by user.

            The amount will be in the currency that the organization is setup
            with in case of GET requests. <br>
          example: 1984.18
        policy_amount:
          type: number
          description: >
            The transaction amount which is modified by policy.

            The amount will be in the currency that the organization is setup
            with in case of GET requests. <br>
          example: 1500
        admin_amount:
          type: number
          description: >
            The transaction amount which is modified by admin or approver.

            The amount will be in the currency that the organization is setup
            with in case of GET requests. <br>

            This could be null if admin or approver has not edited your expense.
          example: null
        tax:
          type: number
          description: Tax amount as setup by your organisation.
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        creator_id:
          $ref: '#/components/schemas/creator_id'
        creator:
          allOf:
            - $ref: '#/components/schemas/employee'
          description: |
            Details of employee who created this expense.
        purpose:
          type: string
          maxLength: 1024
          description: Justification for the expense.
          example: Team lunch
        project_id:
          type: string
          description: >
            The ID generated by Fyle to uniquely identify the Project, to which
            the Expense belongs. <br>
          example: '1234'
        project:
          $ref: '#/components/schemas/project'
        cost_center_id:
          type: string
          description: >
            The ID generated by Fyle to uniquely identify the CostCenter, to
            which the Expense belongs. <br>
          example: '4321'
        cost_center:
          $ref: '#/components/schemas/cost_center'
        category_id:
          type: string
          description: >
            The unique ID of a Category to which the Expense belongs. <br>

            Use `GET /api/tpa/v1/categories` to get the list of valid ID and
            Name of the Categories for the organization.
          example: '18'
        category:
          $ref: '#/components/schemas/category'
        state:
          type: string
          enum:
            - COMPLETE
            - DRAFT
            - PAID
            - PAYMENT_PROCESSING
            - APPROVER_PENDING
            - PAYMENT_PENDING
            - APPROVED
          description: The state of the Expense.
          readOnly: true
        source_account_id:
          type: string
        source_account:
          $ref: '#/components/schemas/source_account'
        invoice_number:
          type: string
          description: |
            invoice number from the receipt.
        billable:
          type: boolean
          example: true
          description: This fields marks whether a given expense is billable a not.
        reimbursable:
          type: boolean
          example: true
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        expense_number:
          type: string
          description: |
            This is user visible identifier for an expense.
            This field can be used as reference in UI.
          example: E/2020/10/T/95
        exchange_rate:
          type: number
          description: >
            This field determines at which rate the expenses from foriegn
            currency was converted to home curreny
        report_id:
          type: string
          description: |
            Unique id given by Fyle to identify an Expense Report.
        reported_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the Expense was submitted via a Report to the
            Approvers.

            If the Expense is not added to a Report yet or if the Report is not
            yet submitted, this could be null.
        report:
          $ref: '#/components/schemas/report'
        physical_bill:
          type: boolean
          description: |
            This field indicated whether physicall bill was received or not.
          example: true
        physical_bill_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp indicating when the Expense's physicall bill was
            submitted.

            If the Expense's bill is not required to be submitted, then this
            could be null.
        verified:
          type: boolean
          description: |
            Indicates whether the Expense is verified or not
          readOnly: true
        verified_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the Expense was verified.

            If the Expense is not verified yet, this could be null. <br>
          readOnly: true
        vendor:
          type: string
          example: Uber
          maxLength: 255
          description: |
            String denoting the name of the vendor to which the Expense was made
        vendor_id:
          type: string
          example: 24242r
          maxLength: 255
          description: |
            String denoting the id of the vendor to which the Expense was made
        locations:
          description: >
            This field will be present for travel related categories. To add to
            and from location to you travel category related expenses add two
            locations in schema given below.
          type: array
          items:
            $ref: '#/components/schemas/location'
        started_at:
          description: >
            This field is only relevant for travel related categories. This
            represents the onward date.
          type: string
          example: '2019-07-17T00:00:00.000Z'
        ended_at:
          description: >
            This field is only relevant for travel related categories. This
            represents the return date.
          type: string
          example: '2019-07-27T00:00:00.000Z'
        mileage:
          $ref: '#/components/schemas/mileage'
        travel:
          $ref: '#/components/schemas/travel'
        hotel:
          type: object
          properties:
            is_breakfast_provided:
              type: boolean
        per_diem_rate_id:
          type: string
        per_diem_rate:
          allOf:
            - $ref: '#/components/schemas/perdiem'
            - type: object
              properties:
                num_days:
                  type: integer
                  example: 2
        activity_details:
          type: string
        activity_policy_pending:
          type: boolean
        has_attachments:
          type: boolean
          description: >
            Returns if there are file attachments that the Expense has. Usually
            the image of the receipts are added as attachments to the Expenses.
          readOnly: true
        attachments:
          description: >
            This field will not be present in the response for the GET method on
            the `/api/tpa/v1/expenses` call.
          type: array
          items:
            $ref: '#/components/schemas/file'
        custom_properties:
          type: array
          items:
            $ref: '#/components/schemas/custom_property'
        is_policy_flagged:
          type: boolean
          description: >-
            This field indicates whether policy execution has flagged this
            expenses or not.
          example: false
        is_manual_flagged:
          type: boolean
          description: >
            This field indicates whether this expenses was manually flagged by
            approver or finance or admin.
          example: true
        policy_state:
          type: string
          enum:
            - FAILED
            - SUCCESS
            - RUNNING
          description: >
            This fields shows policy execution state for this expenses.

            If this field is null then its policy has not yet run on this
            expenses.
        extracted_data:
          type: object
        transcribed_data:
          type: object
        is_user_review_needed:
          type: boolean
        is_mandatory_fields_present:
          type: boolean
        is_receipt_required:
          type: boolean
        is_holiday_expense:
          type: boolean
        risk_state:
          type: string
          enum:
            - HIGH_RISK
            - MODERATE_RISK
            - NO_RISK
          example: NO_RISK
        external_id:
          type: string
          description: >
            Id given by external systems like Gmail. To identify whether that
            entity has been already added to Fyle or not.
        split_group_id:
          type: string
        split_group_user_amount:
          type: number
        personal_card_transaction:
          type: object
          description: >
            This key contains details about personal card transaction linked to
            this expense.
        corporate_credit_card_transaction:
          type: object
          description: >
            This key contains details about corporate card transaction linked to
            this expense.
        transaction_approvals:
          type: array
          items:
            $ref: '#/components/schemas/approvals'
          example:
            - approver_id: ougelgneget
              state: APPROVED
            - approver_id: ougo3nlwfgg
              state: APPROVAL_PENDING
        last_updater_id:
          type: string
          description: |
            This represents the id of employee who updated this expense.
          example: ouGgsdfdq
        last_updater:
          allOf:
            - $ref: '#/components/schemas/employee'
          description: |
            Details of employee who updated this expense.
        org_id:
          $ref: '#/components/schemas/org_id'
    expenses:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/count'
        offset:
          $ref: '#/components/schemas/offset'
        url:
          type: string
          example: /admin/expenses
        data:
          type: array
          items:
            $ref: '#/components/schemas/expense'
    name:
      type: string
      description: |
        This field specifies the name of the custom property.
      example: Vendor desciption
    type:
      type: string
      description: |
        This field specifies the type of the custom property.
      example: TEXT
    options:
      type: array
      items:
        type: string
      description: >
        This field specifies the option values of the custom property in case on
        SELECT or MULTI_SELECT custom property type.
      example:
        - Chai
        - Coffee
    placeholder:
      type: string
      description: |
        This field specifies the placeholder of the custom property.
      example: Enter vendor
    category_ids:
      type: array
      items:
        type: integer
      description: >
        This field specifies the org category ids associated with the custom
        property.
      example:
        - 16570
    enabled:
      type: boolean
      description: |
        This field specifies if the object is enabled or not.
      example: true
    mandatory:
      type: boolean
      description: |
        This field specifies if the custom property is mandatory or not.
      example: true
    expense_custom_property:
      type: object
      properties:
        id:
          type: number
          description: >
            This id is provided by Fyle to identify a particular custom
            property.
          readOnly: true
          example: 7
        name:
          $ref: '#/components/schemas/name'
        type:
          $ref: '#/components/schemas/type'
        options:
          $ref: '#/components/schemas/options'
        placeholder:
          $ref: '#/components/schemas/placeholder'
        category_ids:
          $ref: '#/components/schemas/category_ids'
        categories:
          type: array
          description: >
            This list of categories that are applicable for this custom
            property.
          items:
            $ref: '#/components/schemas/category'
        is_enabled:
          $ref: '#/components/schemas/enabled'
        is_mandatory:
          $ref: '#/components/schemas/mandatory'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        last_updater_id:
          type: string
          description: |
            This represents the id of employee who updated this custom property.
          example: ouGgsdfdq
        last_updater:
          allOf:
            - $ref: '#/components/schemas/employee'
          description: |
            Details of employee who updated this custom property.
    expense_custom_properties:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/count'
        offset:
          $ref: '#/components/schemas/offset'
        url:
          type: string
          example: /admin/expense_custom_properties
        data:
          type: array
          items:
            $ref: '#/components/schemas/expense_custom_property'
    currency:
      type: string
      maxLength: 10
      description: >
        The three-letter currency code following ISO standard <a
        href='https://www.iso.org/iso-4217-currency-codes.html'>ISO 4217</a>
      example: USD
    amount:
      type: integer
      description: |
        Amount value of the object.
      example: 100
    reports:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
          description: |
            This id prodvided by Fyle to uniquely identify a Expense report.
            This id is always prefixed with `rp`.
          readOnly: true
          example: rpevetgn3kl
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          $ref: '#/components/schemas/employee'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        submitted_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the Report was submitted to the Approvers.

            If the Report is not yet submitted, this could be null. <br>
          readOnly: true
        purpose:
          type: string
        claim_number:
          type: string
          maxLength: 255
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        tax:
          type: number
        state:
          type: string
        source:
          type: string
        approved_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the Report was approved. This field could be null
            if the Report was not yet approved.
          readOnly: true
        verified:
          type: boolean
          description: |
            Indicates whether the Report is verified or not.
          readOnly: true
        verified_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the Report was verified. If the Report is not
            verified yet, this could be null.
          readOnly: true
        reimbursed_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the Report was Reimbursed. If the Report is not
            reimbursed or submitted yet, this could be null.
          readOnly: true
        settlement_id:
          type: string
          readOnly: true
          maxLength: 255
          description: >
            An unique ID, generated by Fyle, for identifying the Settlement.
            Once a Report is paid, the value of this field cannot be changed and
            is immutable. <br>
          example: setzS7mbPKPWg
        settled_at:
          readOnly: true
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the report was settled. <br>
          example: '2017-07-21T17:32:28Z'
        num_expenses:
          type: integer
        expense_ids:
          type: array
          items:
            type: string
        verification_state:
          type: string
        creator_id:
          $ref: '#/components/schemas/creator_id'
        creator:
          allOf:
            - $ref: '#/components/schemas/employee'
          description: |
            Details of employee who created this report.
        trip_request_id:
          type: string
        physical_bill:
          type: boolean
        physical_bill_at:
          type: string
        manual_flag:
          type: boolean
        is_policy_flagged:
          type: boolean
        type:
          type: string
        started_at:
          type: string
        ended_at:
          type: string
        locations:
          type: array
          items:
            $ref: '#/components/schemas/location'
        report_approvals:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/approvals'
              - type: object
                properties:
                  rank:
                    type: integer
                    example: 1
        org_id:
          $ref: '#/components/schemas/org_id'
        last_updater_id:
          type: string
          description: |
            This represents the id of employee who updated this report.
          example: ouGgsdfdq
        last_updater:
          allOf:
            - $ref: '#/components/schemas/employee'
          description: |
            Details of employee who updated this report.
    get_reports:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/count'
        offset:
          $ref: '#/components/schemas/offset'
        url:
          type: string
          example: /admin/expenses
        data:
          type: array
          items:
            $ref: '#/components/schemas/reports'
    advance_request_id:
      type: string
      maxLength: 255
      description: >
        This id is provided by Fyle to identify an advance request from this
        organisation.

        This id is always prefixed with `areq`.
      example: areq0AluN2n1RE
    advance_id:
      type: string
      maxLength: 255
      description: >
        This id is provided by Fyle to identify an advance from this
        organisation.

        This id is always prefixed with `adv`.
      example: advZP7QXFbHH4
    advance:
      type: object
      readOnly: true
      properties:
        id:
          $ref: '#/components/schemas/advance_id'
        advance_number:
          type: string
          description: >
            An non-unique human readable id to identify an advance within an
            organisation.
          maxLength: 255
        issued_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the advance was issued. <br>
          example: '2020-07-23T09:32:00.933Z'
        settlement_id:
          type: string
          maxLength: 255
          description: >
            An unique ID, generated by Fyle, for identifying the Settlement.

            Once a Report is paid, the value of this field cannot be changed and
            is immutable. <br>
          example: setzS7mbPKPWg
        settled_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the advance was settled. <br>
          example: '2020-07-23T09:32:00.933Z'
        issuer_id:
          allOf:
            - $ref: '#/components/schemas/employee_id'
          description: |
            Employee id of person who issued the advance.
          example: ouebvjwgjgl
    advance_request_number:
      type: string
      maxLength: 255
      description: >
        This value is provided by Fyle to facilitate easy identification of an
        advance request
      example: AR/2019/03/R/2
    trip_request_id:
      type: string
      maxLength: 255
      description: >
        This id is provided by Fyle to identify a trip request from this
        organisation.

        This id is always prefixed with `tr`.
      example: trObdH5YgKzL
    approved_at:
      type: string
      format: date-time
      description: >
        <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339,
        section 5.6 compliant timestamp.</a>

        Signifies when this object was approved.
      readOnly: true
      example: '2020-07-03T18:19:31.193Z'
    project_id:
      type: string
      maxLength: 255
      description: >
        This id is provided by Fyle to identify a project from this
        organisation.

        This id is unique within the organisation.
      example: '2391'
    policy_state:
      type: string
      enum:
        - SUCCESS
        - FAILED
      description: |
        Enum value signifying the action of policy on this object.
      example: SUCCESS
    policy_flag:
      type: boolean
      readOnly: true
      description: |
        Flag to indicate if this object has been processed by policy.
      example: true
    is_sent_back:
      type: boolean
      description: |
        Flag which indicates if this object was sent back for clarification.
      example: false
    is_pulled_back:
      type: boolean
      description: |
        Flag which indicates if this object was pulled back by the requestor.
      example: false
    advance_request:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/advance_request_id'
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          $ref: '#/components/schemas/employee'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        advance_id:
          $ref: '#/components/schemas/advance_id'
        advance:
          $ref: '#/components/schemas/advance'
        advance_request_number:
          $ref: '#/components/schemas/advance_request_number'
        trip_request_id:
          $ref: '#/components/schemas/trip_request_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        approved_at:
          $ref: '#/components/schemas/approved_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        notes:
          type: string
          description: |
            Optional descriptive notes which can be added to an advance request.
          example: onsite client meeting
        purpose:
          type: string
          description: |
            Descriptive purpose which is added to an advance request.
          example: onsite client meeting
        state:
          type: string
          enum:
            - DRAFT
            - APPROVAL_PENDING
            - APPROVED
            - REJECTED
            - PAID
          description: |
            State of the advance request.
          example: PAID
        project_id:
          $ref: '#/components/schemas/project_id'
        project:
          $ref: '#/components/schemas/project'
        custom_properties:
          type: array
          items:
            $ref: '#/components/schemas/custom_property'
        policy_amount:
          allOf:
            - $ref: '#/components/schemas/amount'
          description: |
            Amount set by policy
        policy_state:
          $ref: '#/components/schemas/policy_state'
        is_policy_flagged:
          $ref: '#/components/schemas/policy_flag'
        is_sent_back:
          $ref: '#/components/schemas/is_sent_back'
        is_pulled_back:
          $ref: '#/components/schemas/is_pulled_back'
        org_id:
          $ref: '#/components/schemas/org_id'
        source:
          type: string
          enum:
            - WEBAPP
            - MOBILE
          description: >
            Enum value signifying the client method from which this
            advance_request was initiated.
          example: WEBAPP
        advance_request_approvals:
          type: array
          items:
            $ref: '#/components/schemas/approvals'
        last_updater_id:
          type: string
          description: |
            This represents the id of employee who updated this advance request.
          example: ouGgsdfdq
        last_updater:
          allOf:
            - $ref: '#/components/schemas/employee'
          description: |
            Details of employee who updated this advance request.
    advance_requests:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/count'
        offset:
          $ref: '#/components/schemas/offset'
        url:
          type: string
          example: /admin/advance_requests
        data:
          type: array
          items:
            $ref: '#/components/schemas/advance_request'
    objects_advance:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/advance_id'
        assingee_id:
          $ref: '#/components/schemas/employee_id'
        assignee:
          $ref: '#/components/schemas/employee'
        issuer_id:
          allOf:
            - $ref: '#/components/schemas/employee_id'
          description: |
            Employee id of person who issued the advance.
          example: ouebvjwgjgl
        issuer:
          allOf:
            - $ref: '#/components/schemas/employee'
          description: |
            Details for the person who issued the advance.
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        advance_request_id:
          $ref: '#/components/schemas/advance_request_id'
        advance_number:
          type: string
          description: >
            An non-unique human readable id to identify an advance within an
            organisation.
        trip_request_id:
          $ref: '#/components/schemas/trip_request_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        approved_at:
          $ref: '#/components/schemas/approved_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        purpose:
          type: string
          description: |
            Descriptive purpose which is added to an advance request.
          example: onsite client meeting
        project_id:
          $ref: '#/components/schemas/project_id'
        project:
          $ref: '#/components/schemas/project'
        custom_properties:
          type: array
          items:
            $ref: '#/components/schemas/custom_property'
        org_id:
          $ref: '#/components/schemas/org_id'
        source:
          type: string
          enum:
            - WEBAPP
            - MOBILE
          description: >
            Enum value signifying the client method from which this
            advance_request was initiated.
          example: WEBAPP
        mode:
          type: string
          enum:
            - CASH
            - BANK_TRANSFER
            - FOREX
            - CHEQUE_DD
          example: CASH
        card_number:
          type: string
        reference_code:
          type: string
          description: |
            This is used to store external system's unique identifier.
          example: ITIvwowggwng
        settlement_id:
          type: string
          maxLength: 255
          description: >
            An unique ID, generated by Fyle, for identifying the Settlement.

            Once a Report is paid, the value of this field cannot be changed and
            is immutable. <br>
          example: setzS7mbPKPWg
        settled_at:
          type: string
          format: date-time
          description: >
            RFC 3339, section 5.6
            "https://tools.ietf.org/html/rfc3339#section-5.6" compliant
            timestamp on which the advance was settled.<br>
          example: '2020-07-23T09:32:00.933Z'
    advances:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/count'
        offset:
          $ref: '#/components/schemas/offset'
        url:
          type: string
          example: /admin/advances
        data:
          type: array
          items:
            $ref: '#/components/schemas/objects_advance'
    settlement_id:
      type: string
      maxLength: 255
      description: |
        Unique identifier of settlement object linked to this object.
      example: setd8Ywn4n0H
    reimbursements:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
          description: |
            This id prodvided by Fyle to uniquely identify a reimbursement.
            This id is always prefixed with `reim`.
          readOnly: true
          example: reimntGt9ju6qP
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          $ref: '#/components/schemas/employee'
        org_id:
          $ref: '#/components/schemas/org_id'
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        state:
          type: string
          enum:
            - COMPLETE
            - PENDING
          description: |
            State of the reimbursement.
          example: COMPLETE
        unique_id:
          type: string
          description: >
            A unique, organization wide identifier for a particular
            reimbursement.<br>

            This id is always prefixed with `P/`.
          example: P/2020/11/29
        settlement_id:
          $ref: '#/components/schemas/settlement_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        creator_id:
          $ref: '#/components/schemas/creator_id'
        creator:
          allOf:
            - $ref: '#/components/schemas/employee'
          description: |
            Details of employee who created this reimbursement.
        mode:
          type: string
          enum:
            - ACH
            - OFFLINE
          description: |
            Mode of creation of this reimbursement.
          example: OFFLINE
        ach_state:
          type: string
          enum:
            - ACH_INITIATED
            - ACH_COMPLETE
            - ACH_FAILED
            - ACH_RETRY
          description: |
            Status of ACH if this reimbursment is processed via ACH.
          example: ACH_COMPLETE
    get_reimbursements:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/count'
        offset:
          $ref: '#/components/schemas/offset'
        url:
          type: string
          example: /admin/reimbursements
        data:
          type: array
          items:
            $ref: '#/components/schemas/reimbursements'
    refunds:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
          description: |
            This id prodvided by Fyle to uniquely identify a refund.
            This id is always prefixed with `ref`.
          readOnly: true
          example: refDml2wrWqk1
        collector_id:
          type: string
          maxLength: 255
          description: >
            Employee ID of collector of the refund.

            This ID prodvided by Fyle to uniquely identify an employee within an
            organization.

            This ID is always prefixed with `ou`.
          example: outGt9ju6qP
        collector:
          allOf:
            - $ref: '#/components/schemas/employee'
          description: |
            Details of employee who is the collector of this refund.
        returnee_id:
          type: string
          maxLength: 255
          description: >
            Employee ID of returnee of the refund.

            This ID prodvided by Fyle to uniquely identify an employee within an
            organization.

            This ID is always prefixed with `ou`.
          example: oul8zTHMnTjp
        returnee:
          allOf:
            - $ref: '#/components/schemas/employee'
          description: |
            Details of employee who is the returnee of this refund.
        org_id:
          $ref: '#/components/schemas/org_id'
        payment_mode:
          type: string
          enum:
            - CASH
            - BANK_TRANSFER
            - FOREX
            - CHEQUE_DD
          maxLength: 255
          description: |
            Mode of payment for a refund object.
          example: BANK_TRANSFER
        foreign_currency:
          $ref: '#/components/schemas/foreign_currency'
        foreign_amount:
          $ref: '#/components/schemas/foreign_amount'
        reference:
          type: string
          description: |
            Reference code of a refund object.
          example: 6t2uygfhjdhs
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        note:
          type: string
          description: |
            Optional descriptive note which can be added to a refund.
          example: august's pending amount refund
        settlement_id:
          $ref: '#/components/schemas/settlement_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        returned_at:
          type: string
          format: date-time
          description: >
            <a href='https://tools.ietf.org/html/rfc3339#section-5.6'>RFC 3339,
            section 5.6 compliant timestamp.</a>

            Signifies when this refund was returned by returnee.
          example: '2020-06-01T13:14:54.804Z'
        card_number:
          type: string
          description: |
            Last 4 or 6 digits of the card used for payment of this refund.
          example: '2838'
        source:
          type: string
          enum:
            - WEBAPP
            - WEBAPP_BULK_EXCEL
          description: >
            Enum value signifying the client method from which this refund was
            initiated.
          example: WEBAPP_BULK_EXCEL
    get_refunds:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/count'
        offset:
          $ref: '#/components/schemas/offset'
        url:
          type: string
          example: /admin/refunds
        data:
          type: array
          items:
            $ref: '#/components/schemas/refunds'
    settlements:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
          description: |
            This id prodvided by Fyle to uniquely identify a settlement.
            This id is always prefixed with `set`.
          readOnly: true
          example: setmntGt9ju6qP
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        opened_at:
          type: string
          format: date-time
          description: >
            <a href='https://tools.ietf.org/html/rfc3339#section-5.6'>RFC 3339,
            section 5.6 compliant timestamp.</a>

            Signifies the opening date of this settlement.
          example: '2020-06-01T13:14:54.804Z'
        closed_at:
          type: string
          format: date-time
          description: >
            <a href='https://tools.ietf.org/html/rfc3339#section-5.6'>RFC 3339,
            section 5.6 compliant timestamp.</a>

            Signifies the closing date of this settlement.
          example: '2020-06-01T13:14:54.804Z'
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          $ref: '#/components/schemas/employee'
        reimbursement_id:
          type: string
          maxLength: 255
          description: |
            Unique identifier of reimbursement object linked to this settlement.
          example: reimd8Ywn4n0H
        creator_id:
          $ref: '#/components/schemas/creator_id'
        creator:
          allOf:
            - $ref: '#/components/schemas/employee'
          description: >
            Details of employee who created the reimbursement linked to this
            settlement.
        org_id:
          $ref: '#/components/schemas/org_id'
        settlement_number:
          type: integer
          description: >
            A number to identify an employee's settlement. It is unique for all
            settlements of an employee.
          example: 39
        total_opening_balance:
          type: number
          description: |
            Value of opening amount of this settlement.
          example: 1500.23
        total_closing_balance:
          type: number
          description: |
            Value of closing amount of this settlement.
          example: 2500.22
    get_settlements:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/count'
        offset:
          $ref: '#/components/schemas/offset'
        url:
          type: string
          example: /admin/settlements
        data:
          type: array
          items:
            $ref: '#/components/schemas/settlements'
    balance_transfer:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
          description: |
            This id prodvided by Fyle to uniquely identify a balance transfer.
            This id is always prefixed with `bt`.
          readOnly: true
          example: btLL7YJKZHMz
        employee_id:
          $ref: '#/components/schemas/employee_id'
        employee:
          $ref: '#/components/schemas/employee'
        issuer_id:
          type: string
          maxLength: 255
          description: >
            Employee ID of issuer of the balance transfer.

            This ID prodvided by Fyle to uniquely identify an employee within an
            organization.

            This ID is always prefixed with `ou`.
          example: oul8zTHMnTjp
        issuer:
          allOf:
            - $ref: '#/components/schemas/employee'
          description: |
            Details of employee who issued this balance transfer.
        org_id:
          $ref: '#/components/schemas/org_id'
        currency:
          $ref: '#/components/schemas/currency'
        amount:
          $ref: '#/components/schemas/amount'
        note:
          type: string
          description: |
            Optional descriptive note which can be added to a refund.
          example: august's pending amount refund
        issued_at:
          type: string
          format: date-time
          description: >
            <a href='https://tools.ietf.org/html/rfc3339#section-5.6'>RFC 3339,
            section 5.6 compliant timestamp.</a>

            Signifies when this balance transfer was issued by issuer.
          example: '2020-06-01T13:14:54.804Z'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        source_account_id:
          type: string
        source_account:
          $ref: '#/components/schemas/source_account'
    balance_transfers:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/count'
        offset:
          $ref: '#/components/schemas/offset'
        url:
          type: string
          example: /admin/balance_transfers
        data:
          type: array
          items:
            $ref: '#/components/schemas/balance_transfer'
    objects_project:
      type: object
      properties:
        id:
          type: string
          maxLength: 10
          description: >
            This id provided by Fyle to identify a project from this
            organisation.

            This id is a numeric string.

            This id is unique within the organisation.
          readOnly: true
          example: '2391'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the project.
          example: Fast and Furious
        sub_project:
          type: string
          maxLength: 255
          description: Represents the name of the sub_project.
          example: Formula One
        display_name:
          type: string
          maxLength: 513
          description: >
            This is a combination of name and sub_project separated by a / and
            spaces.

            In case if no sub_project is present it is same as name of the
            project.
          example: Fast and Furious / Formula One
        code:
          type: string
          maxLength: 255
          description: |
            This represents the code of project.
          example: FF-032
        description:
          type: string
          maxLength: 255
          description: |
            This represents the description of project.
          example: Win the trophy
        is_enabled:
          type: boolean
          description: >
            This indicates if the project is enabled for use within the
            organisation.
          default: true
          example: true
        category_ids:
          type: array
          description: >
            Has the list of all category ids that are applicable for this
            project.
          items:
            type: string
          example:
            - '16570'
        categories:
          type: array
          description: |
            This list of categories that are applicable for this project.
          items:
            $ref: '#/components/schemas/category'
        primary_approver_id:
          type: string
          maxLength: 255
          description: |
            Employee Id of the primary approver.
          example: ou4b24ugv3vg
        primary_approver:
          allOf:
            - $ref: '#/components/schemas/user'
          description: >
            Primary approver who will be added as an approver by default for all
            the submitted reports and expenses.
          example:
            full_name: primary approver
            email: primary_approver@example.com
        secondary_approver_id:
          type: string
          maxLength: 255
          description: |
            Employee Id of the secondary approver.
          example: ourjgeugv3vg
        secondary_approver:
          allOf:
            - $ref: '#/components/schemas/user'
          description: |
            A secondary approver who can be added to reports via policies.
          example:
            full_name: secondary approver
            email: secondary_approver@example.com
    projects:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/count'
        offset:
          $ref: '#/components/schemas/offset'
        url:
          type: string
          example: /admin/projects
        data:
          type: array
          items:
            $ref: '#/components/schemas/objects_project'
    limit:
      description: |
        The actual number of objects that are returned in the response.
      type: integer
      example: 100
    categories:
      type: object
      properties:
        id:
          type: string
          maxLength: 10
          description: >
            This id provided by Fyle to identify a project from this
            organisation.

            This id is a numeric string.

            This id is unique within the organisation.
          readOnly: true
          example: '2391'
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        name:
          type: string
          maxLength: 255
          description: Represents the name of the project.
          example: Fast and Furious
        sub_category:
          type: string
          maxLength: 513
          description: |
            Represents the sub category of a given category.
          example: One
        system_category:
          type: string
          maxLength: 255
          description: Represents the name of the system category.
          example: Formula One
        code:
          type: string
          maxLength: 255
          description: |
            This represents the code of project.
          example: FF-032
        is_enabled:
          type: boolean
          description: >
            This indicates if the project is enabled for use within the
            organisation.
          default: true
          example: true
        creator_id:
          type: string
          description: |
            This represents the id of user who created the category.
          example: ouEsdfdq
        creator:
          $ref: '#/components/schemas/employee'
        last_updater_id:
          type: string
          description: |
            This represents the id of employee who updated this category.
          example: ouGgsdfdq
        last_updater:
          allOf:
            - $ref: '#/components/schemas/employee'
          description: |
            Details of employee who updated this category.
    get_categories:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/count'
        offset:
          $ref: '#/components/schemas/offset'
        limit:
          $ref: '#/components/schemas/limit'
        url:
          type: string
          example: /admin/categories
        data:
          type: array
          items:
            $ref: '#/components/schemas/categories'
    objects_cost_center:
      type: object
      properties:
        id:
          type: string
          maxLength: 255
          description: >
            This is provided by Fyle to identify a cost center from this
            organisation.
          readOnly: true
          example: '11539'
        name:
          type: string
          maxLength: 255
          description: |
            This represents the name of the cost center.
          example: sales & marketing
        code:
          type: string
          maxLength: 255
          description: |
            This represents the code of cost center.
          example: sm-cc
        description:
          type: string
          maxLength: 255
          description: |
            This field provides a decription about the cost center.
          example: Initial Cost center
        is_enabled:
          type: boolean
          description: |
            This field specifies if the current cost center is enabled or not.
          example: true
        org_id:
          $ref: '#/components/schemas/org_id'
        created_at:
          $ref: '#/components/schemas/created_at'
        updated_at:
          $ref: '#/components/schemas/updated_at'
        last_updater_id:
          type: string
          description: |
            This represents the id of employee who updated this cost center.
          example: ouGgsdfdq
        last_updater:
          allOf:
            - $ref: '#/components/schemas/employee'
          description: |
            Details of employee who updated this cost center.
    cost_centers:
      type: object
      properties:
        count:
          $ref: '#/components/schemas/count'
        offset:
          $ref: '#/components/schemas/offset'
        url:
          type: string
          example: /admin/cost_centers
        data:
          type: array
          items:
            $ref: '#/components/schemas/objects_cost_center'
tags:
  - name: Employees
    description: |
      These APIs gives you access to manage your organisation's Employees data.
  - name: Expenses
    description: |
      This API gives you access to your organisation's Expenses data.
  - name: Expense Custom Properties
    description: >
      This API gives you access to your organisation's Expenses Custom
      Properties data.
  - name: Reports
    description: |
      This API gives you access to your organisation's Expense Reports data.
  - name: Advances
    description: |
      This API gives you access to Issued Advances data of your organisation.
  - name: Advance Requests
    description: |
      This API gives you access to your organisation's Advance Requests data.
  - name: Reimbursements
    description: >
      These APIs gives you access to manage your organisation's Reimbursements
      data.
  - name: Refunds
    description: |
      These APIs gives you access to manage your organisation's Refunds data.
  - name: Settlements
    description: >
      These APIs gives you access to manage your organisation's Settlements
      data.
  - name: Balance Transfers
    description: >
      These APIs gives you access to manage your organisation's Balance
      Transfers data.
  - name: Projects
    description: |
      These APIs gives you access to manage your organisation's Projects data.
  - name: Cost Centers
    description: >
      These APIs gives you access to manage your organisation's Cost Centers
      data.
  - name: Categories
    description: |
      These APIs gives you access to manage your organisation's Categories data.
paths:
  /admin/employees:
    get:
      tags:
        - Employees
      summary: List employees
      operationId: get-employees
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - in: query
          name: email
          description: |
            This param is used to filter records based on employee email.
            Supported operators are `in`,`eq`.<br>
          schema:
            type: string
          example: eq.employee1@example.com
        - in: query
          name: order
          description: |
            use comma separated column names for sorting the results. <br>
            For sorting in descending order, use `updated_at.desc`.<br>
            Supported columns are `updated_at`, `id`.
          schema:
            type: string
            example: 'updated_at.desc,id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/employees'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      tags:
        - Employees
      summary: Create or update an employee
      description: |
        Create or update an employee.
      operationId: post-employees
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/objects_employee'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: /admin/employees
                  data:
                    $ref: '#/components/schemas/objects_employee'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      message:
                        type: string
                    example:
                      message: Invalid or disabled approver 1 email
                  - $ref: '#/components/schemas/json_parsing_error'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/expenses:
    get:
      tags:
        - Expenses
      summary: List expenses
      operationId: get-expenses
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/employee_email'
        - $ref: '#/components/parameters/approved_at'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/verified'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - in: query
          name: order
          description: |
            use comma separated column names for sorting the results. <br>
            For sorting in descending order, use `updated_at.desc`.<br>
            Supported columns are `updated_at`, `id`.
          schema:
            type: string
            example: 'updated_at.desc,id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/expenses'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      tags:
        - Expenses
      summary: Create or update an expense
      description: |
        Create or update an expense.
      operationId: post-expense
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/expense'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: /admin/expense
                  data:
                    $ref: '#/components/schemas/expense'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      message:
                        type: string
                    example:
                      message: Invalid or disabled project id
                  - $ref: '#/components/schemas/json_parsing_error'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/expense_custom_properties:
    get:
      tags:
        - Expense Custom Properties
      summary: List expense custom properties
      operationId: get-expense-custom-properties
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/name'
        - $ref: '#/components/parameters/only_enabled'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - in: query
          name: order
          description: |
            use comma separated column names for sorting the results. <br>
            For sorting in descending order, use `updated_at.desc`.<br>
            Supported columns are `updated_at`, `id`.
          schema:
            type: string
            example: 'updated_at.desc,id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/expense_custom_properties'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /admin/reports:
    get:
      tags:
        - Reports
      summary: List reports
      operationId: get-reports
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/approved_at'
        - $ref: '#/components/parameters/reports_state'
        - $ref: '#/components/parameters/settled_at'
        - $ref: '#/components/parameters/reimbursed_at'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - in: query
          name: order
          description: |
            use comma separated column names for sorting the results. <br>
            For sorting in descending order, use `updated_at.desc`.<br>
            Supported columns are `updated_at`, `id`.
          schema:
            type: string
            example: 'updated_at.desc,id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_reports'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
  /admin/advance_requests:
    get:
      tags:
        - Advance Requests
      summary: List advance requests
      operationId: get-advance-requests
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/approved_at'
        - $ref: '#/components/parameters/advance_requests_settled_at'
        - $ref: '#/components/parameters/advance_requests_state'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - in: query
          name: order
          description: |
            use comma separated column names for sorting the results. <br>
            For sorting in descending order, use `updated_at.desc`.<br>
            Supported columns are `updated_at`, `id`.
          schema:
            type: string
            example: 'updated_at.desc,id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/advance_requests'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/advances:
    get:
      tags:
        - Advances
      summary: List advances
      operationId: get-advances
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/approved_at'
        - $ref: '#/components/parameters/advances_settled_at'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - in: query
          name: order
          description: |
            use comma separated column names for sorting the results. <br>
            For sorting in descending order, use `updated_at.desc`.<br>
            Supported columns are `updated_at`, `id`.
          schema:
            type: string
            example: 'updated_at.desc,id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/advances'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/reimbursements:
    get:
      tags:
        - Reimbursements
      summary: List reimbursement
      operationId: get-reimbursements
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - in: query
          name: order
          description: |
            use comma separated column names for sorting the results. <br>
            For sorting in descending order, use `updated_at.desc`.<br>
            Supported columns are `updated_at`, `id`.
          schema:
            type: string
            example: 'updated_at.desc,id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_reimbursements'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/refunds:
    get:
      tags:
        - Refunds
      summary: List refund
      operationId: get-refunds
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - in: query
          name: order
          description: |
            use comma separated column names for sorting the results. <br>
            For sorting in descending order, use `updated_at.desc`.<br>
            Supported columns are `updated_at`, `id`.
          schema:
            type: string
            example: 'updated_at.desc,id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_refunds'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/settlements:
    get:
      tags:
        - Settlements
      summary: List settlement
      operationId: get-settlements
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - in: query
          name: order
          description: |
            use comma separated column names for sorting the results. <br>
            For sorting in descending order, use `updated_at.desc`.<br>
            Supported columns are `updated_at`, `id`.
          schema:
            type: string
            example: 'updated_at.desc,id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_settlements'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/balance_transfers:
    get:
      tags:
        - Balance Transfers
      summary: List balance transfers
      operationId: get-balance-transfers
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - in: query
          name: order
          description: |
            use comma separated column names for sorting the results. <br>
            For sorting in descending order, use `updated_at.desc`.<br>
            Supported columns are `updated_at`, `id`.
          schema:
            type: string
            example: 'updated_at.desc,id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/balance_transfers'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/projects:
    get:
      tags:
        - Projects
      summary: List projects
      operationId: get-projects
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/display_name'
        - $ref: '#/components/parameters/only_enabled'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - in: query
          name: order
          description: |
            use comma separated column names for sorting the results. <br>
            For sorting in descending order, use `updated_at.desc`.<br>
            Supported columns are `updated_at`, `id`.
          schema:
            type: string
            example: 'updated_at.desc,id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projects'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      tags:
        - Projects
      summary: Create or update a project
      description: |
        Create or update a project.
      operationId: post-projects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/objects_project'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: /admin/projects
                  data:
                    $ref: '#/components/schemas/objects_project'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      message:
                        type: string
                    example:
                      message: Invalid or duplicate project code
                  - $ref: '#/components/schemas/json_parsing_error'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/categories:
    get:
      tags:
        - Categories
      summary: List categories
      operationId: get-categories
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/only_enabled'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_categories'
        '401':
          description: Unauthorized request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      tags:
        - Categories
      summary: Create or update a category
      description: |
        Create or update a category.
      operationId: post-categories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/categories'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: /admin/categories
                  data:
                    $ref: '#/components/schemas/categories'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      message:
                        type: string
                    example:
                      message: Invalid or duplicate category code
                  - $ref: '#/components/schemas/json_parsing_error'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
  /admin/cost_centers:
    get:
      tags:
        - Cost Centers
      summary: List cost centers
      operationId: get-cost-centers
      parameters:
        - $ref: '#/components/parameters/created_at'
        - $ref: '#/components/parameters/updated_at'
        - $ref: '#/components/parameters/only_enabled'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/limit'
        - in: query
          name: order
          description: |
            use comma separated column names for sorting the results. <br>
            For sorting in descending order, use `updated_at.desc`.<br>
            Supported columns are `updated_at`, `id`.
          schema:
            type: string
            example: 'updated_at.desc,id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cost_centers'
        '401':
          description: Unauthoried request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
    post:
      tags:
        - Cost Centers
      summary: Create or update a cost center
      description: |
        Create or update a cost center.
      operationId: post-cost-centers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/objects_cost_center'
              required:
                - data
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: /admin/cost_centers
                  data:
                    $ref: '#/components/schemas/objects_cost_center'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      message:
                        type: string
                    example:
                      message: Invalid or duplicate cost center code
                  - $ref: '#/components/schemas/json_parsing_error'
        '401':
          description: Unauthorised request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403'
