get:
  tags:
    - Expenses
  summary: List expenses
  operationId: get-expenses
  parameters:
    - $ref: '../schemas/requests/commons/created_at.yaml'
    - $ref: '../schemas/requests/commons/updated_at.yaml'
    - $ref: '../schemas/requests/commons/employee_email.yaml'
    - $ref: '../schemas/requests/commons/approved_at.yaml'
    - $ref: '../schemas/requests/expenses/state.yaml'
    - $ref: '../schemas/requests/commons/verified.yaml'
    - $ref: '../schemas/requests/commons/offset.yaml'
    - $ref: '../schemas/requests/commons/limit.yaml'
    - in: query
      name: order
      description: |
        use comma separated column names for sorting the results. <br>
        For sorting in descending order, use `updated_at.desc`.<br>
        Supported columns are `updated_at`, `id`.
      schema:
        type: string
        example: 'updated_at.desc,id'

  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            $ref: '../schemas/responses/get/expenses.yaml'
    '401':
      description: Unauthorised request
      content:
        application/json:
          schema:
            $ref: '../schemas/errors/401.yaml'

post:
  tags:
    - Expenses
  summary: Create or update an expense
  description: |
    Create or update an expense.
  operationId: post-expense
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            data:
              $ref: '../schemas/objects/expense.yaml'
          required: [ data ]

  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              url:
                type: string
                example: '/admin/expense'
              data:
                $ref: '../schemas/objects/expense.yaml'
    '401':
      description: Unauthorised request
      content:
        application/json:
          schema:
            $ref: '../schemas/errors/401.yaml'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '../schemas/errors/403.yaml'
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            oneOf:
              - type: object
                properties:
                  message:
                    type: string
                example:
                  message: Invalid or disabled project id
              - $ref: '../schemas/errors/json_parsing_error.yaml'