get:
  tags:
    - Employees
  summary: |
    List employees
  operationId: GetEmployees
  parameters:
    - $ref: '../schemas/requests/commons/offset.yaml'
    - $ref: '../schemas/requests/commons/limit.yaml'
    - $ref: '../schemas/requests/commons/created_at.yaml'
    - $ref: '../schemas/requests/commons/updated_at.yaml'
    - in: query
      name: email
      description: |
        This param is used to filter records based on employee email.
        Supported operators are `in`,`eq`.<br>
      schema:
        type: string
      example: 'eq.employee1@example.com'
    - $ref: '../schemas/requests/commons/order.yaml'

  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            $ref: '../schemas/responses/get/employees.yaml'
    '401':
      description: Unauthorised request
      content:
        application/json:
          schema:
            $ref: '../schemas/errors/401.yaml'

post:
  tags:
    - Employees
  summary: |
    Create or update employees
  description: |
    creates or update employees in bulk. This API is written in such way to support bulk operations only.
  operationId: PostEmployees
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../schemas/requests/employees.yaml'

  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              url:
                type: string
                example: '/v4/admin/employees'
              data:
                type: array
                items:
                  $ref: '../schemas/responses/post/employees.yaml'

    '401':
      description: Unauthorised request
      content:
        application/json:
          schema:
            $ref: '../schemas/errors/401.yaml'

    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '../schemas/errors/403.yaml'

    '400':
      description: Bad request
      content:
        application/json:
          schema:
            oneOf:
              - type: array
                items:
                  $ref: '../schemas/errors/bulk_error.yaml'
                example:
                  - row: 1
                    key: john.doe@example.com
                    message: Invalid or disabled approver 1 email
              - $ref: '../schemas/errors/json_parsing_error.yaml'